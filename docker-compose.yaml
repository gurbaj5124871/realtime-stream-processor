version: "3.5"
services:
  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper:latest
    ports:
      - 2181:2181
    networks:
      - stream-processor-network
    restart: unless-stopped

  kafka:
    container_name: kafka
    image: wurstmeister/kafka:2.13-2.8.1
    ports:
      - 9092:9092
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ADVERTISED_PORT: 9092

      # Assign a consistent broker ID to prevent "leader not available"
      # on recreate
      KAFKA_BROKER_ID: 1

      LOG4J_LOGGER_KAFKA: WARN
      LOG4J_LOGGER_ORG_APACHE_KAFKA: WARN

      LOG4J_LOGGER_ORG_APACHE_ZOOKEEPER: WARN
      LOG4J_APPENDER_STDERR_THRESHOLD: WARN
      LOG4J_APPENDER_STDERR_TARGET: System.err

      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_CREATE_TOPICS: sample-topic:3:1
    depends_on:
      - zookeeper
    networks:
      - stream-processor-network
    restart: unless-stopped

  postgresql:
    container_name: postgresql
    environment:
      POSTGRES_PASSWORD: postgresql
      POSTGRES_USER: postgresql
    image: postgres:13
    networks:
      - stream-processor-network
    ports:
      - 5432:5432
    volumes:
      - /var/lib/postgresql/data

  temporal:
    container_name: temporal
    depends_on:
      - postgresql
    environment:
      - DB=postgresql
      - DB_PORT=5432
      - POSTGRES_USER=postgresql
      - POSTGRES_PWD=postgresql
      - POSTGRES_SEEDS=postgresql
      - DYNAMIC_CONFIG_FILE_PATH=config/dynamicconfig/temporal-config.yaml
    image: temporalio/auto-setup:1.20.0
    networks:
      - stream-processor-network
    ports:
      - 7233:7233
    volumes:
      - ./dynamicconfig:/etc/temporal/config/dynamicconfig
    labels:
      kompose.volume.type: configMap
    healthcheck:
      test:
        [
          "CMD",
          "tctl",
          "--address",
          "temporal:7233",
          "workflow",
          "list"
        ]
      interval: 10s
      timeout: 1m
      retries: 10

  temporal-ui:
    container_name: temporal-ui
    depends_on:
      - temporal
    environment:
      - TEMPORAL_ADDRESS=temporal:7233
      - TEMPORAL_CORS_ORIGINS=http://localhost:3000
    image: temporalio/ui:2.10.3
    networks:
      - stream-processor-network
    ports:
      - 8080:8080

  mongodb:
    container_name: mongodb
    image: mongo:latest
    networks:
      - stream-processor-network
    ports:
      - 27017:27017
    volumes:
      - /var/lib/mongodb/data

  mongo-express:
    container_name: mongodb-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    networks:
      - stream-processor-network
    environment:
      ME_CONFIG_MONGODB_URL: mongodb://mongodb:27017/

networks:
  stream-processor-network:
    driver: bridge
    name: stream-processor-network